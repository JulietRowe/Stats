(1/8)*(1/1000) * (60) * (60)
(1/8)*(1/1000) * (60) * (60) *90
(1/8)*(1/1000) * (60) * (60) *90
2.5 * (1/1000) * 60 * 60
(1/9)*(1/1000) * (60) * (60) *90
(1/10)*(1/1000) * (60) * (60) *90
setwd("C:/Users/julie/GitHub/Stats")
data = read.table("sampleanovadata2.txt")
names(data) = c('subject', 'group', 'rt')
data$group = factor(data$group)
#Testing Assumptions
par(mfcol = c(1,4))
hist(data$rt[data$group == 1])
hist(data$rt[data$group == 2])
hist(data$rt[data$group == 3])
hist(data$rt[data$group == 4])
library("moments")
skewness(data$rt[data$group ==1])
kurtosis(data$rt[data$group == 1])
skewness(data$rt[data$group == 2])
kurtosis(data$rt[data$group == 2])
skewness(data$rt[data$group == 3])
kurtosis(data$rt[data$group == 3])
skewness(data$rt[data$group == 4])
kurtosis(data$rt[data$group == 4])
qqnorm(data$rt[data$group == 1])
qqline(data$rt[data$group == 1])
qqnorm(data$rt[data$group == 2])
qqline(data$rt[data$group == 2])
qqnorm(data$rt[data$group == 3])
qqline(data$rt[data$group == 3])
qqnorm(data$rt[data$group == 4])
qqline(data$rt[data$group == 4])
View(data)
library(car)
leveneTest(data$rt~data$group)
bartlett.test(data$rt~data$group)
for(counter in 1:4)
{
analysis = shapiro.test(data$rt[data$group== counter])
print(analysis)
}
for(counter in 1:33)
{
analysis = shapiro.test(data$rt[data$group== counter])
#print(analysis)
}
for(counter in 1:4)
{
analysis = shapiro.test(data$rt[data$group== counter])
#print(analysis)
}
print('hello world')
shapiro.test(data$rt[data$group==1])
for(counter in 1:4)
{
analysis = shapiro.test(data$rt[data$group== counter])
#print(analysis)
}
for(counter in 1:4)
{
analysis = shapiro.test(data$rt[data$group== counter])
analysis
}
