hist(sample6.means, xlab = "Samples", ylab = "Mean", main = "n = 1000", ylim = c(450, 550))
hist(sample7.means, xlab = "Samples", ylab = "Mean", main = "n = 2500", ylim = c(450, 550))
hist(sample8.means, xlab = "Samples", ylab = "Mean", main = "n = 5000", ylim = c(450, 550))
hist(sample9.means, xlab = "Samples", ylab = "Mean", main = "n = 10000", ylim = c(450, 550))
hist(sample10.means, xlab = "Samples", ylab = "Mean", main = "n = 100000", ylim = c(450, 550))
sample1.data = NA
sample1.means = NA
sample2.data = NA
sample2.means = NA
sample3.data = NA
sample3.means = NA
sample4.data = NA
sample4.means = NA
sample5.data = NA
sample5.means = NA
sample6.data = NA
sample6.means = NA
sample7.data = NA
sample7.means = NA
sample8.data = NA
sample8.means = NA
sample9.data = NA
sample9.means = NA
sample10.data = NA
sample10.means = NA
for(counter in 1:100)
{
sample1.data = rnorm(10,500,100)
sample1.means[counter] = mean(sample1.data)
sample2.data = rnorm(20,500,100)
sample2.means[counter] = mean(sample2.data)
sample3.data = rnorm(30,500,100)
sample3.means[counter] = mean(sample3.data)
sample4.data = rnorm(50,500,100)
sample4.means[counter] = mean(sample4.data)
sample5.data = rnorm(100,500,100)
sample5.means[counter] = mean(sample5.data)
sample6.data = rnorm(1000,500,100)
sample6.means[counter] = mean(sample6.data)
sample7.data = rnorm(2500,500,100)
sample7.means[counter] = mean(sample7.data)
sample8.data = rnorm(5000,500,100)
sample8.means[counter] = mean(sample8.data)
sample9.data = rnorm(10000,500,100)
sample9.means[counter] = mean(sample9.data)
sample10.data = rnorm(100000,500,100)
sample10.means[counter] = mean(sample10.data)
}
hist(sample1.means)
hist(sample1.means, xlab = "Samples", ylab = "Mean", main = "n = 10" )
#Normal Distributions
sample1.data = NA
sample1.data = NA
sample1.means = NA
sample2.data = NA
sample2.means = NA
sample3.data = NA
sample3.means = NA
sample4.data = NA
sample4.means = NA
sample5.data = NA
sample5.means = NA
sample6.data = NA
sample6.means = NA
sample7.data = NA
sample7.means = NA
sample8.data = NA
sample8.means = NA
sample9.data = NA
sample9.means = NA
sample10.data = NA
sample10.means = NA
for(counter in 1:100)
{
sample1.data = rnorm(10,500,100)
sample1.means[counter] = mean(sample1.data)
sample2.data = rnorm(20,500,100)
sample2.means[counter] = mean(sample2.data)
sample3.data = rnorm(30,500,100)
sample3.means[counter] = mean(sample3.data)
sample4.data = rnorm(50,500,100)
sample4.means[counter] = mean(sample4.data)
sample5.data = rnorm(100,500,100)
sample5.means[counter] = mean(sample5.data)
sample6.data = rnorm(1000,500,100)
sample6.means[counter] = mean(sample6.data)
sample7.data = rnorm(2500,500,100)
sample7.means[counter] = mean(sample7.data)
sample8.data = rnorm(5000,500,100)
sample8.means[counter] = mean(sample8.data)
sample9.data = rnorm(10000,500,100)
sample9.means[counter] = mean(sample9.data)
sample10.data = rnorm(100000,500,100)
sample10.means[counter] = mean(sample10.data)
}
par(mfrow = c(5,2))
hist(sample1.means, main = "n = 10" )
hist(sample2.means, main = "n = 20")
hist(sample3.means, main = "n = 30")
hist(sample4.means, main = "n = 50")
hist(sample5.means, main = "n = 100")
hist(sample6.means, main = "n = 1000")
hist(sample7.means, main = "n = 2500")
hist(sample8.means, main = "n = 5000")
hist(sample9.means, main = "n = 10000")
hist(sample10.means, main = "n = 100000")
par(mfrow = c(5,2))
hist(sample1.means, main = "n = 10", xlim = c(400,600))
hist(sample2.means, main = "n = 20", xlim = c(400,600))
hist(sample3.means, main = "n = 30", xlim = c(400,600))
hist(sample4.means, main = "n = 50", xlim = c(400,600))
hist(sample5.means, main = "n = 100", xlim = c(400,600))
hist(sample6.means, main = "n = 1000", xlim = c(400,600))
hist(sample7.means, main = "n = 2500", xlim = c(400,600))
hist(sample8.means, main = "n = 5000", xlim = c(400,600))
hist(sample9.means, main = "n = 10000", xlim = c(400,600))
hist(sample10.means, main = "n = 100000", xlim = c(400,600))
par(mfrow = c(5,2))
hist(sample1.means, main = "n = 10", xlim = c(400,600), ylim = c(0,40))
hist(sample2.means, main = "n = 20", xlim = c(400,600), ylim = c(0,40))
hist(sample3.means, main = "n = 30", xlim = c(400,600), ylim = c(0,40))
hist(sample4.means, main = "n = 50", xlim = c(400,600), ylim = c(0,40))
hist(sample5.means, main = "n = 100", xlim = c(400,600), ylim = c(0,40))
hist(sample6.means, main = "n = 1000", xlim = c(400,600), ylim = c(0,40))
hist(sample7.means, main = "n = 2500", xlim = c(400,600), ylim = c(0,40))
hist(sample8.means, main = "n = 5000", xlim = c(400,600), ylim = c(0,40))
hist(sample9.means, main = "n = 10000", xlim = c(400,600), ylim = c(0,40))
hist(sample10.means, main = "n = 100000", xlim = c(400,600), ylim = c(0,40))
sample11.data = NA
sample11.means = NA
sample12.data = NA
sample12.means = NA
sample13.data = NA
sample13.means = NA
sample14.data = NA
sample14.means = NA
sample15.data = NA
sample15.means = NA
sample16.data = NA
sample16.means = NA
sample17.data = NA
sample17.means = NA
sample18.data = NA
sample18.means = NA
sample19.data = NA
sample19.means = NA
sample20.data = NA
sample20.means = NA
for(counter in 1:100)
{
sample11.data = runif(10,500,100)
sample11.means[counter] = mean(sample11.data)
sample12.data = runif(20,500,100)
sample12.means[counter] = mean(sample12.data)
sample13.data = runif(30,500,100)
sample13.means[counter] = mean(sample13.data)
sample14.data = runif(50,500,100)
sample14.means[counter] = mean(sample14.data)
sample15.data = runif(100,500,100)
sample15.means[counter] = mean(sample15.data)
sample16.data = runif(1000,500,100)
sample16.means[counter] = mean(sample16.data)
sample17.data = runif(2500,500,100)
sample17.means[counter] = mean(sample17.data)
sample18.data = runif(5000,500,100)
sample18.means[counter] = mean(sample18.data)
sample19.data = runif(10000,500,100)
sample19.means[counter] = mean(sample19.data)
sample20.data = runif(100000,500,100)
sample20.means[counter] = mean(sample20.data)
}
par(mfrow = c(5,2))
hist(sample11.means, main = "n = 10" )
hist(sample12.means, main = "n = 20")
hist(sample13.means, main = "n = 30")
hist(sample14.means, main = "n = 50")
hist(sample15.means, main = "n = 100")
hist(sample16.means, main = "n = 1000")
hist(sample17.means, main = "n = 2500")
hist(sample18.means, main = "n = 5000")
hist(sample19.means, main = "n = 10000")
hist(sample20.means, main = "n = 100000")
sample11.data = NA
sample11.means = NA
sample12.data = NA
sample12.means = NA
sample13.data = NA
sample13.means = NA
sample14.data = NA
sample14.means = NA
sample15.data = NA
sample15.means = NA
sample16.data = NA
sample16.means = NA
sample17.data = NA
sample17.means = NA
sample18.data = NA
sample18.means = NA
sample19.data = NA
sample19.means = NA
sample20.data = NA
sample20.means = NA
for(counter in 1:100)
{
sample11.data = runif(10,500,100)
sample11.means[counter] = mean(sample11.data)
sample12.data = runif(20,500,100)
sample12.means[counter] = mean(sample12.data)
sample13.data = runif(30,500,100)
sample13.means[counter] = mean(sample13.data)
sample14.data = runif(50,500,100)
sample14.means[counter] = mean(sample14.data)
sample15.data = runif(100,500,100)
sample15.means[counter] = mean(sample15.data)
sample16.data = runif(1000,500,100)
sample16.means[counter] = mean(sample16.data)
sample17.data = runif(2500,500,100)
sample17.means[counter] = mean(sample17.data)
sample18.data = runif(5000,500,100)
sample18.means[counter] = mean(sample18.data)
sample19.data = runif(10000,500,100)
sample19.means[counter] = mean(sample19.data)
sample20.data = runif(100000,500,100)
sample20.means[counter] = mean(sample20.data)
}
par(mfrow = c(5,2))
hist(sample11.means, main = "n = 10" )
sample11.data = NA
sample11.means = NA
sample12.data = NA
sample12.means = NA
sample13.data = NA
sample13.means = NA
sample14.data = NA
sample14.means = NA
sample15.data = NA
sample15.means = NA
sample16.data = NA
sample16.means = NA
sample17.data = NA
sample17.means = NA
sample18.data = NA
sample18.means = NA
sample19.data = NA
sample19.means = NA
sample20.data = NA
sample20.means = NA
for(counter in 1:100)
{
sample11.data = runif(10,1,1000)
sample11.means[counter] = mean(sample11.data)
sample12.data = runif(20,1,1000)
sample12.means[counter] = mean(sample12.data)
sample13.data = runif(30,1,1000)
sample13.means[counter] = mean(sample13.data)
sample14.data = runif(50,1,1000)
sample14.means[counter] = mean(sample14.data)
sample15.data = runif(100,1,1000)
sample15.means[counter] = mean(sample15.data)
sample16.data = runif(1000,1,1000)
sample16.means[counter] = mean(sample16.data)
sample17.data = runif(2500,1,1000)
sample17.means[counter] = mean(sample17.data)
sample18.data = runif(5000,1,1000)
sample18.means[counter] = mean(sample18.data)
sample19.data = runif(10000,1,1000)
sample19.means[counter] = mean(sample19.data)
sample20.data = runif(100000,1,1000)
sample20.means[counter] = mean(sample20.data)
}
par(mfrow = c(5,2))
hist(sample11.means, main = "n = 10" )
hist(sample12.means, main = "n = 20")
hist(sample13.means, main = "n = 30")
hist(sample14.means, main = "n = 50")
hist(sample15.means, main = "n = 100")
hist(sample16.means, main = "n = 1000")
hist(sample17.means, main = "n = 2500")
hist(sample18.means, main = "n = 5000")
hist(sample19.means, main = "n = 10000")
hist(sample20.means, main = "n = 100000")
par("mar")
par(mar = c(1,1,1,1))
par(mfrow = c(5,2))
hist(sample11.means, main = "n = 10" )
hist(sample12.means, main = "n = 20")
hist(sample13.means, main = "n = 30")
hist(sample14.means, main = "n = 50")
hist(sample15.means, main = "n = 100")
hist(sample16.means, main = "n = 1000")
hist(sample17.means, main = "n = 2500")
hist(sample18.means, main = "n = 5000")
hist(sample19.means, main = "n = 10000")
hist(sample20.means, main = "n = 100000")
par(mfrow = c(5,2))
hist(sample11.means, main = "n = 10", xlim = c(200,850), ylim = c(0,40))
hist(sample12.means, main = "n = 20", xlim = c(200,850), ylim = c(0,40))
hist(sample13.means, main = "n = 30", xlim = c(200,850), ylim = c(0,40))
hist(sample14.means, main = "n = 50", xlim = c(200,850), ylim = c(0,40))
hist(sample15.means, main = "n = 100", xlim = c(200,850), ylim = c(0,40))
hist(sample16.means, main = "n = 1000", xlim = c(200,850), ylim = c(0,40))
hist(sample17.means, main = "n = 2500", xlim = c(200,850), ylim = c(0,40))
hist(sample18.means, main = "n = 5000", xlim = c(200,850), ylim = c(0,40))
hist(sample19.means, main = "n = 10000", xlim = c(200,850), ylim = c(0,40))
hist(sample20.means, main = "n = 100000", xlim = c(200,850), ylim = c(0,40))
newsample.data = NA
newsample.means = NA
for(counter in 1:100000)
{
newsample.data = rnorm(30, 500, 100)
newsample.means[counter] = mean(newsample.data)
}
hist(newsample.means)
newsample.data = NA
newsample.means = NA
for(counter in 1:100000)
{
newsample.data = rnorm(30, 500, 100)
newsample.means[counter] = mean(newsample.data)
}
hist(newsample.means)
stuff = hist(newsample.means)
stuff
newsample.data = NA
newsample.means = NA
for(counter in 1:100000)
{
newsample.data = rnorm(30, 500, 100)
newsample.means[counter] = mean(newsample.data)
}
stuff = hist(newsample.means)
stuff
min(newsample.means)
max(newsample.means)
View(stuff)
View(stuff)
stuff
min(newsample.means)
(newsample.means == 460)/100000
sum(newsample.means == 460)/100000
Randomsample.data = NA
Randomsample.means = NA
for(counter in 1:100000)
{
Randomsample.data = runif(30, 500, 100)
Randomsample.means[counter] = mean(Randomsample.data)
}
min(Randomsample.means)
max(Randomsample.means)
Randomsample.data = NA
Randomsample.means = NA
for(counter in 1:100000)
{
Randomsample.data = runif(1, 1000, 30)
Randomsample.means[counter] = mean(Randomsample.data)
}
hist(Randomsample.means)
min(Randomsample.means)
max(Randomsample.means)
Randomsample.data = NA
Randomsample.means = NA
for(counter in 1:100000)
{
Randomsample.data = runif(30, 1, 1000)
Randomsample.means[counter] = mean(Randomsample.data)
}
hist(Randomsample.means)
min(Randomsample.means)
max(Randomsample.means)
sum(Randomsample.means == 460)/100000
newsample1.data = NA
newsample1.means = NA
for(counter in 1:100000)
{
newsample1.data = rnorm(10, 500, 100)
newsample1.means[counter] = mean(newsample1.data)
}
hist(newsample1.means)
min(newsample1.means)
max(newsample1.means)
newsample1.data = NA
newsample1.means = NA
for(counter in 1:100000)
{
newsample1.data = rnorm(50, 500, 100)
newsample1.means[counter] = mean(newsample1.data)
}
hist(newsample1.means)
min(newsample1.means)
max(newsample1.means)
newsample1.data = NA
newsample1.means = NA
for(counter in 1:100000)
{
newsample1.data = rnorm(100, 500, 100)
newsample1.means[counter] = mean(newsample1.data)
}
hist(newsample1.means)
min(newsample1.means)
max(newsample1.means)
SEM = 100/sqrt(30)
SEM
newsample.data = NA
newsample.means = NA
for(counter in 1:100000)
{
newsample.data = rnorm(30, 500, 100)
newsample.means[counter] = mean(newsample.data)
}
hist(newsample.means)
min(newsample.means)
max(newsample.means)
#Probability of getting a mean less than 460
analysis = t.test(newsample.means, mu = 460)
print(analysis)
analysis = t.test(newsample.means, mu <= 460)
print(analysis)
analysis = t.test(newsample.means, mu < 460)
print(analysis)
analysis = t.test(newsample.means, mu = 460)
print(analysis)
analysis = t.test(newsample.means, alternative = "less", mu = 460)
print(analysis)
newsample.data = NA
newsample.means = NA
for(counter in 1:100000)
{
newsample.data = rnorm(30, 500, 100)
newsample.means[counter] = mean(newsample.data)
}
hist(newsample.means)
min(newsample.means)
max(newsample.means)
#Probability of getting a mean less than 460
analysis = t.test(newsample.means, alternative = "less", mu = 460)
print(analysis)
setwd("C:/Users/julie/GitHub/Stats")
#Question 1
data = read.table("assignmentdata1.txt")
analysis = t.test(data$V1, mu = 2900)
print(analysis)
#Our analysis showed that the sample mean was equal to the population mean, t(49) = 1.4161, p = 0.1631
mean = mean(data$V1)
sd = sd(data$V1)
cis = abs(qt(0.05, 49)*sd/sqrt(50))
plot_data = data.frame(
Values = data$V1,
Group = c('sample 1')
)
library(ggplot2)
ggplot(aes(x = Group, y= Values), data = plot_data)+
stat_summary(fun = mean, geom = 'bar')+
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0.25)+
scale_y_continuous(expand = c(0,0))+
theme_classic()
#Question 2
data2 = read.table("assignmentdata2.txt")
names(data2) = c('subject', 'time', 'calories')
data2$time = factor(data2$time)
analysis2 = t.test(data2$calories~data2$time, paired = TRUE)
print(analysis2)
#Our analysis revealed that the caloric intake was not different between two times, t(49) = 1.447, p = 0.1543
means = aggregate(data2$calories, list(data2$time), mean)
means = means$x
sds = aggregate(data2$calories, list(data2$time), sd)
sds = sds$x
cis_time1 = abs(qt(0.05, 49)*sds[1]/sqrt(50))
cis_time2 = abs(qt(0.05, 49)*sds[2]/sqrt(50))
dev.new()
ggplot(aes(x = time, y= calories), data = data2)+
stat_summary(fun = mean, geom = 'bar')+
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0.25)+
scale_y_continuous(expand = c(0,0))+
theme_classic()
data2$difference = data2$calories[data2$time == 1] - data2$calories[data2$time == 2]
plot_data2 = data.frame(
Values = data2$difference[0:50],
Group = c('Difference')
)
mean_difference = mean(plot_data2$Values)
sd_difference = sd(plot_data2$Values)
cis_difference = abs(qt(0.05, 49)*sd_difference/sqrt(50))
dev.new()
ggplot(aes(x = Group, y= Values), data = plot_data2)+
stat_summary(fun = mean, geom = 'bar')+
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0.5)+
scale_y_continuous(expand = c(0,0))+
theme_classic()
#Question 3
data3 = read.table("assignmentdata3.txt")
names(data3) = c('subject', 'group', 'calories')
data$group = factor(data$group)
analysis3 = t.test(data3$calories~data3$group)
print(analysis3)
#Our analysis revealed that the caloric intake was different between the two groups, t(49) = 2.587, p < 0.05
means3 = aggregate(data3$calories, list(data3$group), mean)
means3 = means3$x
sds3 = aggregate(data3$calories, list(data3$group), sd)
sds3 = sds3$x
cis_group1 = abs(qt(0.05, 49)*sds3[1]/sqrt(50))
cis_group2 = abs(qt(0.05, 49)*sds3[2]/sqrt(50))
dev.new()
ggplot(aes(x = group, y= calories), data = data3)+
stat_summary(fun = mean, geom = 'bar')+
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0.25)+
scale_y_continuous(expand = c(0,0))+
theme_classic()
ggplot(aes(x = Group, y= Values), data = plot_data)+
stat_summary(fun = mean, geom = 'bar')+
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0.25)+
scale_y_continuous(expand = c(0,0))+
theme_classic()
