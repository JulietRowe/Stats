(1/8)*(1/1000) * (60) * (60)
(1/8)*(1/1000) * (60) * (60) *90
(1/8)*(1/1000) * (60) * (60) *90
2.5 * (1/1000) * 60 * 60
(1/9)*(1/1000) * (60) * (60) *90
(1/10)*(1/1000) * (60) * (60) *90
setwd("C:/Users/julie/GitHub/Stats")
data.SW_normality = NA
data.KS_normality = NA
for(counter in 1:10)
{
data = read.table(sprintf("subject%d.txt", counter), sep = " ")
data = stack(data)
data.means[counter] = mean(data$values)
data.sds[counter] = sd(data$values)
print(range(data$values))
dev.new()
hist(data$values, main = counter)
data.SW_normality[counter] = shapiro.test(data$values)$p.value
data.KS_normality[counter] = ks.test(data$values, pnorm, mean(data$values), sd(data$values))$p.value
}
data.means = NA
data.sds = NA
data.SW_normality = NA
data.KS_normality = NA
for(counter in 1:10)
{
data = read.table(sprintf("subject%d.txt", counter), sep = " ")
data = stack(data)
data.means[counter] = mean(data$values)
data.sds[counter] = sd(data$values)
print(range(data$values))
dev.new()
hist(data$values, main = counter)
data.SW_normality[counter] = shapiro.test(data$values)$p.value
data.KS_normality[counter] = ks.test(data$values, pnorm, mean(data$values), sd(data$values))$p.value
}
#Question 1
data = read.table("assignmentdata1.txt")
analysis = t.test(data$V1, mu = 2900)
print(analysis)
#Our analysis showed that the sample mean was equal to the population mean, t(49) = 1.4161, p = 0.1631
mean = mean(data$V1)
sd = sd(data$V1)
cis = abs(qt(0.05, 49)*sd/sqrt(50))
plot_data = data.frame(
Values = data$V1,
Group = c('sample 1')
)
library(ggplot2)
ggplot(aes(x = Group, y= Values), data = plot_data)+
stat_summary(fun = mean, geom = 'bar')+
stat_summary(fun.data = mean_cl_normal, geom = 'errorbar', width = 0.25)+
scale_y_continuous(expand = c(0,0))+
theme_classic()
data = read.table("sampleanovadata2.txt")
names(data) = c('subject', 'group', 'rt')
skewness(data$rt[data$group ==1])
kurtosis(data$rt[data$group == 1])
skewness(data$rt[data$group == 2])
kurtosis(data$rt[data$group == 2])
skewness(data$rt[data$group == 3])
kurtosis(data$rt[data$group == 3])
skewness(data$rt[data$group == 4])
kurtosis(data$rt[data$group == 4])
library("moments")
skewness(data$rt[data$group ==1])
kurtosis(data$rt[data$group == 1])
skewness(data$rt[data$group == 2])
kurtosis(data$rt[data$group == 2])
skewness(data$rt[data$group == 3])
kurtosis(data$rt[data$group == 3])
skewness(data$rt[data$group == 4])
kurtosis(data$rt[data$group == 4])
library(car)
leveneTest(data$rt~data$group)
data$group = factor(data$group)
leveneTest(data$rt~data$group)
boxplot(data$rt~data$group)
analysis = aov(data$rt~data$group)
summary(analysis)
library("gplots")
plotmeans(data$rt~data$group)
#Post Hoc Analysis
TukeyHSD(analysis)
pairwise.t.test(data$rt, data$group, p.adjust = "bonf")
library('agricolae')
out = LSD.test(data$rt, data$group, 196, 3586, p.adj = "none", console = TRUE)
summary.lm(analysis)
contrasts(data$group) = contr.treatment(4, base = 4)
modelnew = aov(data$rt~data$group)
summary.lm(modelnew)
contrasts(data$group) = contr.poly(4)
modelnew = aov(data$rt~data$group)
summary.lm(modelnew)
boxplot(data$rt~data$group)
library(car)
leveneTest(data$rt~data$group)
bartlett.test(data$rt~data$group)
contrasts(data$group) = contr.poly(4)
modelnew = aov(data$rt~data$group)
summary.lm(modelnew)
View(data)
View(data)
summary.lm(analysis)
#Wilcox Test
data = read.table("ttestdata.txt")
library(car)
leveneTest(data$V3~factor(data$V2))
t.test(data$V3~factor(data$V2))
wilcox.test(data$V3~factor(data$V2))
data = read.table("ttestdata2.txt")
data1 = data$V3[data$V2 == 1]
data2 = data$V3[data$V2 == 2]
differences = data2 - data1
hist(differences)
t.test(data$V3~factor(data$V2), paired = TRUE)
wilcox.test(data$V3~factor(data$V2), paired = TRUE)
data = read.table("anovadata.txt")
group = factor(data$V2)
dv = data$V3
boxplot(dv~group)
library(car)
leveneTest(dv~group)
kruskal.test(dv~group)
library(pgirmess)
kruskalmc(dv~group)
friedman.test(as.matrix(data))
friedmanmc(as.matrix(data))
data = read.table("anova_assignment_data.txt")
names(data) = c("subjects", "age", "gender", "rt")
rt = data$rt
age = factor(data$age)
gender = factor(data$gender)
model = aov(rt~age + gender + age*gender)
summary(model)
plot(model)
plot(rt~age)
plot(rt~gender)
interaction.plot(age, gender, rt)
TukeyHSD(model)
age1 = subset(data, age == 1)
t.test(age1$rt~age1$gender)
age2 = subset(data, age == 2)
t.test(age2$rt~age2$gender)
age3 = subset(data, age == 3)
t.test(age3$rt~age3$gender)
gender1 = subset(data, gender == 1)
model1 = aov(gender1$rt~factor(gender1$age))
summary(model1)
gender2 = subset(data,gender == 2)
model2 = aov(gender2$rt~factor(gender2$age))
summary(model2)
TukeyHSD(model2)
libray('car')
leveneTest(data$rt, data$age)
age = factor(data$age)
gender = factor(data$gender)
leveneTest(data$rt, data$gender)
leveneTest(data$rt, interaction(data$age, data$gender))
data = read.table("sampleanovadata2.txt")
names(data) = c('subject', 'group', 'rt')
data$group = factor(data$group)
shapiro.test(data$rt[data$group==1])
shapiro.test(data$rt[data$group==2])
shapiro.test(data$rt[data$group==3])
shapiro.test(data$rt[data$group==4])
shapiro.test(data$rt[data$age])
data = read.table("anova_assignment_data.txt")
names(data) = c("subjects", "age", "gender", "rt")
rt = data$rt
age = factor(data$age)
gender = factor(data$gender)
leveneTest(drt, age)
leveneTest(rt, gender)
leveneTest(rt, interaction(age, gender))
shapiro.test(rt[age])
View(data)
View(data)
shapiro.test(rt[age == 1])
shapiro.test(rt[age == 1])
shapiro.test(rt[age == 2])
shapiro.test(rt[age == 3])
shapiro.test(rt[gender == 1])
shapiro.test(rt[gender == 2])
data = read.table("rmassignmentdata.txt")
names(data) = c("subject", "condition", "data")
data$subject = factor(data$subject)
data$condition = factor(data$condition)
View(data)
View(data)
par(mfcol = c(2,3))
hist(data$data[data$condition == 1])
hist(data$data[data$condition == 2])
hist(data$data[data$condition == 3])
hist(data$data[data$condition == 4])
hist(data$data[data$condition == 5])
hist(data$data[data$condition == 6])
qqnorm(data$data[data$condition == 1])
qqline(data$data[data$condition == 1])
qqnorm(data$data[data$condition == 2])
qqline(data$data[data$condition == 2])
qqnorm(data$data[data$condition == 3])
qqline(data$data[data$condition == 3])
qqnorm(data$data[data$condition == 4])
qqline(data$data[data$condition == 4])
qqnorm(data$data[data$condition == 5])
qqline(data$data[data$condition == 5])
qqnorm(data$data[data$condition == 6])
qqline(data$data[data$condition == 6])
bartlett.test(data$data~data$condition)
shapiro.test(data$data[data$condition == 1])
shapiro.test(data$data[data$condition == 2])
shapiro.test(data$data[data$condition == 3])
shapiro.test(data$data[data$condition == 4])
shapiro.test(data$data[data$condition == 5])
shapiro.test(data$data[data$condition == 6])
bartlett.test(data$data~data$condition)
model = aov(data$data~data$condition + Error(data$subject/data$condition))
summary(model)
model = ezANOVA(data=data, dv = .(data), wid = .(subject), within = .(condition), detailed = TRUE, type = 3)
model
library("ez")
model = ezANOVA(data=data, dv = .(data), wid = .(subject), within = .(condition), detailed = TRUE, type = 3)
model
pairwise.t.test(data$data, data$condition, paired = TRUE)
pairwise.t.test(data$data, data$condition, p.adjust = 'bonf', paired = TRUE)
my.data = read.table('samplermdata.txt')
names(my.data) = c('Subject', 'Week', 'RT')
model = lm(data$data~data$condition)
summary(model)
plot(data$data~data$condition)
plot(data$data~data$condition)
abline(lm(data$data~data$condition))
setwd("C:/Users/julie/GitHub/Stats")
data = read.table("mrdata2.txt")
cor.test(data$V1, data$V2)
plot(data$V1, data$V2)
cor.test(data$V1, data$V3)
plot(data$V1, data$V3)
cor.test(data$V1, data$V4)
plot(data$V1, data$V4)
model = lm(data$V1~data$V2)
summary(model)
plot(data$V2~data$V1)
abline(lm(data$V2~data$V1))
model = lm(data$V1~data$V3)
summary(model)
plot(data$V3~data$V1)
abline(lm(data$V3~data$V1))
my.data = read.table('samplermdata.txt')
names(my.data) = c('Subject', 'Week', 'RT')
my.data$Subject = factor(my.data$Subject)
my.data$Week = factor(my.data$Week)
plot(my.data$RT~my.data$Week)
myRMANOVA = aov(RT~Week + Error(Subject/Week), data = my.data)
print(summary(myRMANOVA))
weekContrast = emmeans(myRMANOVA, "Week")
poly = contrast(weekContrast, 'poly')
print(poly)
library('emmeans')
library('emmeans')
myRMANOVA = aov(RT~Week + Error(Subject/Week), data = my.data)
print(summary(myRMANOVA))
weekContrast = emmeans(myRMANOVA, "Week")
poly = contrast(weekContrast, 'poly')
print(poly)
setwd("C:/Users/julie/GitHub/Stats")
#Question 1
data = read.table("exam_question1.txt")
